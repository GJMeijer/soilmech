% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flownet_quadrilateral.R,
%   R/flownet_quadrilateral_old.R
\name{edges_quadrilateral}
\alias{edges_quadrilateral}
\title{Get properties of real edge nodes in quadrilateral domain}
\usage{
edges_quadrilateral(
  nx,
  ny,
  x1,
  x2,
  x3,
  x4,
  y1,
  y2,
  y3,
  y4,
  i0 = 0,
  domain = 1,
  ...
)

edges_quadrilateral(
  nx,
  ny,
  x1,
  x2,
  x3,
  x4,
  y1,
  y2,
  y3,
  y4,
  i0 = 0,
  domain = 1,
  ...
)
}
\arguments{
\item{nx, ny}{number of real nodes in a and b-directions}

\item{x1, x2, x3, x4, y1, y2, y3, y4}{x and y positions of the corner points of the
quadrilateral. Corners are numbered in clockwise order.}

\item{i0}{node offset}

\item{domain}{domain identifier}

\item{...}{additional arguments to pass}
}
\value{
tibble with all nodes on edges. Contains fields for the domain
  identifier (`domain`), edge (`edge`, numbered clockwise), node index
  (`i`), row and column indices (`ix`, `iy`), the unit vector normal
  to the edge (positing towards the domain) (`vx`, `vy`) and first
  order derivatives of position (`x_a`, `x_b`, `y_a`, `y_b`)

tibble with all nodes on edges. Contains fields for the domain
  identifier (`domain`), edge (`edge`, numbered clockwise), node index
  (`i`), row and column indices (`ix`, `iy`), the unit vector normal
  to the edge (positing towards the domain) (`vx`, `vy`) and first
  order derivatives of position (`x_a`, `x_b`, `y_a`, `y_b`)
}
\description{
Function returns all real nodes on the edges of a quadrilateral domain,
as well as some key properties such as positions and a normal vector

Function returns all real nodes on the edges of a quadrilateral domain,
as well as some key properties such as positions and a normal vector
}
\examples{
nx <- 20
ny <- 10
x1 <- 0
x2 <- 0
x3 <- 1
x4 <- 1
y1 <- 0
y2 <- 1
y3 <- 2
y4 <- 0
edges_quadrilateral(nx, ny, x1, x2, x3, x4, y1, y2, y3, y4)
nx <- 20
ny <- 10
x1 <- 0
x2 <- 0
x3 <- 1
x4 <- 1
y1 <- 0
y2 <- 1
y3 <- 2
y4 <- 0
edges_quadrilateral(nx, ny, x1, x2, x3, x4, y1, y2, y3, y4)
}
