% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/finite_differences.R
\name{findiff_sparse_entries}
\alias{findiff_sparse_entries}
\title{Get sparse matrix elements for 1st or 2nd order differentiation}
\usage{
findiff_sparse_entries(
  nx,
  ny,
  order = 1,
  h = 1,
  direction = "x",
  real_only = FALSE,
  i0_row = 0,
  i0_col = 0,
  multiplier = 1,
  ...
)
}
\arguments{
\item{nx, ny}{number of real nodes in x and y-directions. There need to be
at least 3 (real or ghost) nodes in the direction of differentiation,
or 4 in case 2nd order differentiation is requested with
\code{real_only == TRUE}}

\item{order}{the order of differentiation. \code{order = 1} for first-order
differentiation, and \code{order = 2} for second order differentiation}

\item{h}{step size}

\item{direction}{direction of finite differences. \code{direction} should be
equal to either \code{x} or \code{y}}

\item{real_only}{if \code{TRUE}, the grid is assumed to contain only real nodes,
so there are \code{nx*ny} nodes. If \code{FALSE}, the grid is assumed to contain
ghost nodes on the sides of each of the four edges of the grid, resulting
in \code{nx*ny + 2*nx + 2*ny} nodes. These are numbered in row-wise order,
starting with the left-most ghost node underneath the lower edge}

\item{i0_row, i0_col}{optional index offset for rows and columns}

\item{multiplier}{optional multipliers for all values in the finite
difference matrix to differentiate real nodes}

\item{...}{potential extra arguments}
}
\value{
a tibble with node indices for row (\code{row}), column (\code{col}) and
value (\code{val}) columns of non-zero entries in the matrix
}
\description{
Function generates rows, column and values for sparse matrix to get a
first order approximation of values for all real nodes in a regularly
spaced, rectangular grid in either the x or y direction.

The function assumes a regular, rectangular grid where nodes are numbered
row-first. The grid may or may not contain ghost nodes, depending on the
input settings.

If \code{real_only = TRUE}, the grid contains only 'real' nodes. For a 4*3 grid,
these are numbered:\tabular{ccccc}{
    \tab ix=1 \tab ix=2 \tab ix=3 \tab ix=4 \cr
   iy=3 \tab 9 \tab 10 \tab 11 \tab 12 \cr
   iy=2 \tab 5 \tab 6 \tab 7 \tab 8 \cr
   iy=1 \tab 1 \tab 2 \tab 3 \tab 4 \cr
}


If \code{real_only = FALSE}, the grid also contains 'ghost' nodes on the side
of all edges. For a 4*3 grid, the numbering is:\tabular{ccccccc}{
    \tab ix=0 \tab ix=1 \tab ix=2 \tab ix=3 \tab ix=4 \tab ix=5 \cr
   iy=4 \tab  \tab 23 \tab 24 \tab 25 \tab 26 \tab  \cr
   iy=3 \tab 17 \tab 18 \tab 19 \tab 20 \tab 21 \tab 22 \cr
   iy=2 \tab 11 \tab 12 \tab 13 \tab 14 \tab 15 \tab 16 \cr
   iy=1 \tab 5 \tab 6 \tab 7 \tab 8 \tab 9 \tab 10 \cr
   iy=0 \tab  \tab 1 \tab 2 \tab 3 \tab 4 \tab  \cr
}


The finite difference approximation is of the second order (central
differences). When only real nodes are used and the node lies on an edge,
a second order approximation is used (forwards or backwards, depending
on the position)
}
\examples{
findiff_sparse_entries(5, 4, order = 1, direction = "x", real_only = TRUE)
findiff_sparse_entries(5, 4, order = 1, direction = "y", real_only = FALSE)
findiff_sparse_entries(5, 4, order = 2, direction = "x", real_only = TRUE)
findiff_sparse_entries(5, 4, order = 2, direction = "y", real_only = FALSE)
}
